// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username  String @unique
  avatarUrl String @default("https://i.imgur.com/KtG0hYo.jpg")
  code      String

  chats    MembersOnChats[]
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chat Chat[] @ignore

  @@map("users")
}

model Message {
  id      Int    @id @default(autoincrement())
  content String

  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId Int

  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}

model Chat {
  id   Int    @id @default(autoincrement())
  name String @unique

  owner   User @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId Int

  members  MembersOnChats[]
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("chats")
}

model MembersOnChats {
  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId Int

  members  User @relation(fields: [memberId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  memberId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([chatId, memberId])
  @@map("membersOnChats")
}
